{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "HelloLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lamb-prod-hello"
      }
    },
    "AddmessagetologadminLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lamb-prod-addmessagetologadmin"
      }
    },
    "AddmessagetologkitchenLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lamb-prod-addmessagetologkitchen"
      }
    },
    "AddmessagetologcustomerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lamb-prod-addmessagetologcustomer"
      }
    },
    "CreatetableLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lamb-prod-createtable"
      }
    },
    "CreateuserLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lamb-prod-createuser"
      }
    },
    "StoreqrLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lamb-prod-storeqr"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "prod",
                  "lamb",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lamb-prod*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lamb-prod*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "lamb",
              "prod",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::802587217904:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "ServerlessEnterprise-kRgjJDrLtqvhG5vtGM"
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LogFilterAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:FilterLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "HelloLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "AddmessagetologadminLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "AddmessagetologkitchenLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "AddmessagetologcustomerLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "CreatetableLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "CreateuserLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "StoreqrLogGroup",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "HelloLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lamb/prod/1581489391597-2020-02-12T06:36:31.597Z/lamb.zip"
        },
        "FunctionName": "lamb-prod-hello",
        "Handler": "s_hello.handler",
        "MemorySize": 192,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 10
      },
      "DependsOn": [
        "HelloLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "HelloLambdaVersion9vI716xQSrhNhCaiLbCYxElS8T6XDBesdKoWHrOQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "HelloLambdaFunction"
        },
        "CodeSha256": "V97kbketgHEcJdfAurP4Sijb9g92MmgR8fHbBU61kBk="
      }
    },
    "AddmessagetologadminLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lamb/prod/1581489391597-2020-02-12T06:36:31.597Z/lamb.zip"
        },
        "FunctionName": "lamb-prod-addmessagetologadmin",
        "Handler": "s_addmessagetologadmin.handler",
        "MemorySize": 192,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 10
      },
      "DependsOn": [
        "AddmessagetologadminLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AddmessagetologadminLambdaVersioncLs9t22IVpSsFTzkC3i6tckUHAh6I92f4H695QXeU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddmessagetologadminLambdaFunction"
        },
        "CodeSha256": "V97kbketgHEcJdfAurP4Sijb9g92MmgR8fHbBU61kBk="
      }
    },
    "AddmessagetologkitchenLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lamb/prod/1581489391597-2020-02-12T06:36:31.597Z/lamb.zip"
        },
        "FunctionName": "lamb-prod-addmessagetologkitchen",
        "Handler": "s_addmessagetologkitchen.handler",
        "MemorySize": 192,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 10
      },
      "DependsOn": [
        "AddmessagetologkitchenLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AddmessagetologkitchenLambdaVersionnS0mlo1nDIpTisgj8mtbx2fBpHZ8N7x6AXcVvcc0M": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddmessagetologkitchenLambdaFunction"
        },
        "CodeSha256": "V97kbketgHEcJdfAurP4Sijb9g92MmgR8fHbBU61kBk="
      }
    },
    "AddmessagetologcustomerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lamb/prod/1581489391597-2020-02-12T06:36:31.597Z/lamb.zip"
        },
        "FunctionName": "lamb-prod-addmessagetologcustomer",
        "Handler": "s_addmessagetologcustomer.handler",
        "MemorySize": 192,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 10
      },
      "DependsOn": [
        "AddmessagetologcustomerLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AddmessagetologcustomerLambdaVersion70ra7CWhaLl0tiFFWQx4PPvpGEuqdAAYizK8KJpf7E": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddmessagetologcustomerLambdaFunction"
        },
        "CodeSha256": "V97kbketgHEcJdfAurP4Sijb9g92MmgR8fHbBU61kBk="
      }
    },
    "CreatetableLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lamb/prod/1581489391597-2020-02-12T06:36:31.597Z/lamb.zip"
        },
        "FunctionName": "lamb-prod-createtable",
        "Handler": "s_createtable.handler",
        "MemorySize": 192,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 10
      },
      "DependsOn": [
        "CreatetableLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "CreatetableLambdaVersionrzLMJgmaGxgdDl3rhPU1LhW1kDVuFgvQ5PvaY7rV4w": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreatetableLambdaFunction"
        },
        "CodeSha256": "V97kbketgHEcJdfAurP4Sijb9g92MmgR8fHbBU61kBk="
      }
    },
    "CreateuserLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lamb/prod/1581489391597-2020-02-12T06:36:31.597Z/lamb.zip"
        },
        "FunctionName": "lamb-prod-createuser",
        "Handler": "s_createuser.handler",
        "MemorySize": 192,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 10
      },
      "DependsOn": [
        "CreateuserLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "CreateuserLambdaVersionJhqUoimA6J0kxvWeresMniF8t4BeTWdIeN9vmoo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateuserLambdaFunction"
        },
        "CodeSha256": "V97kbketgHEcJdfAurP4Sijb9g92MmgR8fHbBU61kBk="
      }
    },
    "StoreqrLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lamb/prod/1581489391597-2020-02-12T06:36:31.597Z/lamb.zip"
        },
        "FunctionName": "lamb-prod-storeqr",
        "Handler": "s_storeqr.handler",
        "MemorySize": 192,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 10
      },
      "DependsOn": [
        "StoreqrLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "StoreqrLambdaVersionJClSzfWsXaa9hDMaedCAr26goAK8Tm0e0sFWICim14": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "StoreqrLambdaFunction"
        },
        "CodeSha256": "V97kbketgHEcJdfAurP4Sijb9g92MmgR8fHbBU61kBk="
      }
    },
    "CloudWatchLogsSubscriptionFilterHelloLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:eu-central-1:802587217904:destination:kRgjJDrLtqvhG5vtGM#WNp8FMV7rdSsyk5lxl#lamb#prod",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "HelloLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterAddmessagetologadminLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:eu-central-1:802587217904:destination:kRgjJDrLtqvhG5vtGM#WNp8FMV7rdSsyk5lxl#lamb#prod",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "AddmessagetologadminLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterAddmessagetologkitchenLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:eu-central-1:802587217904:destination:kRgjJDrLtqvhG5vtGM#WNp8FMV7rdSsyk5lxl#lamb#prod",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "AddmessagetologkitchenLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterAddmessagetologcustomerLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:eu-central-1:802587217904:destination:kRgjJDrLtqvhG5vtGM#WNp8FMV7rdSsyk5lxl#lamb#prod",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "AddmessagetologcustomerLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterCreatetableLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:eu-central-1:802587217904:destination:kRgjJDrLtqvhG5vtGM#WNp8FMV7rdSsyk5lxl#lamb#prod",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "CreatetableLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterCreateuserLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:eu-central-1:802587217904:destination:kRgjJDrLtqvhG5vtGM#WNp8FMV7rdSsyk5lxl#lamb#prod",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "CreateuserLogGroup"
        }
      }
    },
    "CloudWatchLogsSubscriptionFilterStoreqrLogGroup": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:eu-central-1:802587217904:destination:kRgjJDrLtqvhG5vtGM#WNp8FMV7rdSsyk5lxl#lamb#prod",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "StoreqrLogGroup"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Value": {
        "Fn::GetAtt": [
          "EnterpriseLogAccessIamRole",
          "Arn"
        ]
      }
    },
    "HelloLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "HelloLambdaVersion9vI716xQSrhNhCaiLbCYxElS8T6XDBesdKoWHrOQ"
      }
    },
    "AddmessagetologadminLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddmessagetologadminLambdaVersioncLs9t22IVpSsFTzkC3i6tckUHAh6I92f4H695QXeU"
      }
    },
    "AddmessagetologkitchenLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddmessagetologkitchenLambdaVersionnS0mlo1nDIpTisgj8mtbx2fBpHZ8N7x6AXcVvcc0M"
      }
    },
    "AddmessagetologcustomerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddmessagetologcustomerLambdaVersion70ra7CWhaLl0tiFFWQx4PPvpGEuqdAAYizK8KJpf7E"
      }
    },
    "CreatetableLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreatetableLambdaVersionrzLMJgmaGxgdDl3rhPU1LhW1kDVuFgvQ5PvaY7rV4w"
      }
    },
    "CreateuserLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateuserLambdaVersionJhqUoimA6J0kxvWeresMniF8t4BeTWdIeN9vmoo"
      }
    },
    "StoreqrLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "StoreqrLambdaVersionJClSzfWsXaa9hDMaedCAr26goAK8Tm0e0sFWICim14"
      }
    }
  }
}